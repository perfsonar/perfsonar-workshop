# General tasks file for the edupert role
---
#####
# Load OS dependant variables
#####
# This needs to be done for all tags, so use the 'always' special tag
- name: Load variables based on OS type
  include_vars: "{{ item }}"
  tags: [ 'always' ]
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"

# Add a workshop specific user to be used by participants
- name: Add and manage eduPERT user account ({{ edupert_username }})
  user:
    name: "{{ edupert_username }}"
    groups: [ 'psadmin', 'pssudo' ]
    comment: "eduPERT user"
    createhome: yes
    state: present
    shell: /bin/bash
    password: "{{ edupert_password }}"
    update_password: 'always'

- name: Add ssh pub keys to eduPERT and Ansible account
  authorized_key:
    user: "{{ item }}"
    exclusive: yes
    manage_dir: yes
    key: "{{ lookup('file', 'public_keys/admins') }}"
    state: present
  with_items:
    - "{{ edupert_username }}"
    - "{{ ansible_user }}"  

- name: Add useful user configuration files
  copy:
    src: "{{ item }}"
    dest: "/home/{{ edupert_username }}/.{{ item }}"
    owner: "{{ edupert_username }}"
    group: "{{ edupert_username }}"
    mode: 0644
  with_items:
    - bashrc
    - screenrc
    - vimrc

# Allow password access so that participants can access the machines
- name: Allow ssh password access
  lineinfile:
    state: present
    path: /etc/ssh/sshd_config
    regexp: "^PasswordAuthentication "
    line: "PasswordAuthentication yes"
  tags: [ 'ps::config' ]
  notify:
    - restart ssh

# Add a HTTP published /perfsonar/workshop directory
- name: Create {{ public_http_dir }}/perfsonar/workshop
  file:
      path: "{{ public_http_dir }}"/perfsonar/workshop
      state: directory
      owner: "{{ edupert_username }}"
      group: "{{ edupert_username }}"
      mode: 0775

# Disable unattended upgrades (most useful for snapshot/staging hosts when preparing workshop setup)
- name: Disable unattended upgrades
  lineinfile:
    path: /etc/apt/apt.conf.d/60unattended-upgrades-perfsonar
    state: 'absent'
    regexp: "APT::Periodic::Unattended-Upgrade \"1\";"
  when: edupert_disable_unattended_upgrades

# Set timezone
- name: Set timezone
  timezone:
    name: "{{ edupert_timezone }}"

# Set hostname
- name: Ensure hostname is well defined
  hostname:
    name: "{{ inventory_hostname }}.{{ ps_domain }}"

# Manage a local /etc/hosts so as to avoid managing custom temporary DNS entries
- name: eduPERT managed /etc/hosts to avoid temporary DNS entries
  include_tasks: hosts.yml
  when: edupert_manage_hosts_file

